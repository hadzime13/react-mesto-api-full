[{"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\index.js":"1","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\serviceWorker.js":"2","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\App.js":"3","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Main.js":"4","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\ImagePopup.js":"6","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\EditAvatarPopup.js":"7","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\ProtectedRoute.js":"8","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Footer.js":"9","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\AddPlacePopup.js":"10","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\EditProfilePopup.js":"11","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\InfoTooltip.js":"12","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Register.js":"13","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\PageNotFound.js":"14","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Login.js":"15","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\mestoAuth.js":"16","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\utils\\api.js":"17","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\contexts\\CurrentUserContext.js":"18","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Button.js":"19","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Card.js":"20","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\PopupWithForm.js":"21","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Form.js":"22"},{"size":624,"mtime":1607865238947,"results":"23","hashOfConfig":"24"},{"size":5227,"mtime":1603546606695,"results":"25","hashOfConfig":"24"},{"size":13169,"mtime":1614520086617,"results":"26","hashOfConfig":"24"},{"size":2449,"mtime":1613409456650,"results":"27","hashOfConfig":"24"},{"size":948,"mtime":1613409343441,"results":"28","hashOfConfig":"24"},{"size":553,"mtime":1603546606683,"results":"29","hashOfConfig":"24"},{"size":1027,"mtime":1603546606680,"results":"30","hashOfConfig":"24"},{"size":334,"mtime":1614423851427,"results":"31","hashOfConfig":"24"},{"size":244,"mtime":1603546606681,"results":"32","hashOfConfig":"24"},{"size":1446,"mtime":1603546606678,"results":"33","hashOfConfig":"24"},{"size":1791,"mtime":1603546606680,"results":"34","hashOfConfig":"24"},{"size":782,"mtime":1613327517793,"results":"35","hashOfConfig":"24"},{"size":1451,"mtime":1613409244854,"results":"36","hashOfConfig":"24"},{"size":446,"mtime":1613409151112,"results":"37","hashOfConfig":"24"},{"size":1375,"mtime":1613409231688,"results":"38","hashOfConfig":"24"},{"size":970,"mtime":1614521267715,"results":"39","hashOfConfig":"24"},{"size":2767,"mtime":1614521252351,"results":"40","hashOfConfig":"24"},{"size":84,"mtime":1603546606685,"results":"41","hashOfConfig":"24"},{"size":306,"mtime":1613409102485,"results":"42","hashOfConfig":"24"},{"size":1445,"mtime":1614286740314,"results":"43","hashOfConfig":"24"},{"size":795,"mtime":1603546606685,"results":"44","hashOfConfig":"24"},{"size":533,"mtime":1613327756459,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1yriref",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\index.js",[],["94","95"],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\App.js",["96"],"import React, { useState } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { InfoToolTip } from './InfoTooltip';\r\nimport api from '../utils/api';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport PageNotFound from './PageNotFound';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport * as mestoAuth from '../mestoAuth';\r\n\r\nfunction App() {\r\n  // Переменные состояния\r\n  // Массив карточек\r\n  const [cards, setCards] = useState([]);\r\n  // открыт попап профиля или нет\r\n  const [isEditProfilePopupOpen, setPopupProfileState] = useState(false);\r\n  // открыт попап добавления карточки или нет\r\n  const [isAddPlacePopupOpen, setPopupPlaceState] = useState(false);\r\n  // открыт попап редактирования аватара или нет\r\n  const [isEditAvatarPopupOpen, setPopupAvatarState] = useState(false);\r\n  // Открыт ли попап инфо о регистрации\r\n  const [isInfoTooltipOpen, setInfoTooltipState] = useState(false);\r\n  // Активна ли кнопка редактирования аватара\r\n  const [isAvatarEditButtonActive, setAvatarEditButton] = useState(false);\r\n  // выбор карточки\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  // Пользователь\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  // Залогинен ли пользователь\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // Данные текущего пользователя\r\n  const [userData, setUserdata] = useState({\r\n    email: '',\r\n  });\r\n  // Данные где находится пользователь\r\n  const [buttonState, setButtonState] = useState('');\r\n  // Данные для попапа о регистрации\r\n  const [isRegistered, setRegisterState] = useState({\r\n    state: false,\r\n    message: '',\r\n  });\r\n  const history = useHistory();\r\n\r\n  // Функция добавления карточки\r\n  const handleAddPlaceSubmit = (cardData) => {\r\n    api\r\n      .uploadCard(cardData)\r\n      .then((newCard) => {\r\n        if (newCard.message === 'celebrate request validation failed') {\r\n          return Promise.reject(newCard.validation.body.message);\r\n        }\r\n        else if(newCard.message) {\r\n          return Promise.reject(`Ошибка: ${newCard.message}`)\r\n        }\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n\r\n  // Функция поддержки лайков\r\n  const handleCardLike = (card) => {\r\n    const isLiked = card.likes.some((like) => like === currentUser._id);\r\n    api\r\n      .changeLikeStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n        setCards(newCards);\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n  // Функция удаления карточки\r\n  const handleCardDelete = (card) => {\r\n    api\r\n      .deleteCard(card._id)\r\n      .then((res) => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n\r\n  // Обработчики открытия попапов\r\n  const handleEditAvatarClick = () => {\r\n    setPopupAvatarState(true);\r\n  };\r\n  const handleEditProfileClick = () => {\r\n    setPopupProfileState(true);\r\n  };\r\n  const handleAddPlaceClick = () => {\r\n    setPopupPlaceState(true);\r\n  };\r\n  // Функция закрытия попапов\r\n  const closeAllPopups = () => {\r\n    setPopupAvatarState(false);\r\n    setPopupProfileState(false);\r\n    setPopupPlaceState(false);\r\n    setInfoTooltipState(false);\r\n    setRegisterState({\r\n      state: false,\r\n      message: '',\r\n    });\r\n    setSelectedCard({});\r\n  };\r\n  const handleCardClick = (cardElement) => {\r\n    setSelectedCard(cardElement);\r\n  };\r\n  // Обработчик кнопки редактирования аватара\r\n  const handleEditAvatarOn = () => {\r\n    setAvatarEditButton(true);\r\n  };\r\n  const handleEditAvatarOff = () => {\r\n    setAvatarEditButton(false);\r\n  };\r\n  // Функция обновления инфо о юзере при сабмите\r\n  const handleUpdateUser = (userData) => {\r\n    api\r\n      .updateUser(userData)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          return Promise.reject(res.validation.body.message);\r\n        }\r\n        else if(res.message) {\r\n          return Promise.reject(res.message);\r\n        }\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n  // Функция обновления аватара при сабмите\r\n  const handleUpdateAvatar = (newAvatar) => {\r\n    api\r\n      .updateUserAvatar(newAvatar)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          return Promise.reject(res.validation.body.message);\r\n        }\r\n        else if(res.message) {\r\n          return Promise.reject(res.message);\r\n        }\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n  // Функция проверки наличия и валидности токена\r\n  const tokenCheck = () => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      mestoAuth\r\n        .getContent(jwt)\r\n        .then((res) => {\r\n          if (res.message) {\r\n            setLoggedIn(false);\r\n            setUserdata({\r\n              email: '',\r\n            });\r\n            return Promise.reject(`Ошибка: ${res.message}`);\r\n          }\r\n          if (res.email) {\r\n            api.setToken(jwt);\r\n            setLoggedIn(true);\r\n            setUserdata({\r\n              email: res.email,\r\n            });\r\n            setCurrentUser(res);\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((res) => {\r\n          setRegisterState({\r\n            state: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  // Функция регистрации\r\n  const handleRegister = (email, password) => {\r\n    mestoAuth\r\n      .register(email, password)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          setRegisterState({\r\n            state: false,\r\n            message: `${res.validation.body.message}.`,\r\n          });\r\n          setInfoTooltipState(true);\r\n          return Promise.reject(\r\n            `Ошибка: ${res.validation.body.message}.`\r\n          );\r\n        } \r\n        else if \r\n        (res.error || res.message) {\r\n          setRegisterState({\r\n            state: false,\r\n            message: `${res.error ? res.error : res.message}.`,\r\n          });\r\n          setInfoTooltipState(true);\r\n          return Promise.reject(\r\n            `Ошибка: ${res.error ? res.error : res.message}.`\r\n          );\r\n        }\r\n        else {\r\n          setRegisterState({\r\n            state: true,\r\n            message: 'Вы успешно зарегистрировались',\r\n          });\r\n          setInfoTooltipState(true);\r\n          history.push('/signin');\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  // Функция авторизации\r\n  const handleLogin = (email, password) => {\r\n    mestoAuth\r\n      .authorize(email, password)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          setRegisterState({\r\n            state: false,\r\n            message: `${res.validation.body.message}.`,\r\n          });\r\n          setInfoTooltipState(true);\r\n          return Promise.reject(\r\n            `Ошибка: ${res.validation.body.message}.`\r\n          );\r\n        }\r\n        else if (res.message) {\r\n          setRegisterState({\r\n            state: false,\r\n            message: `${res.error ? res.error : res.message}.`,\r\n          })\r\n          setInfoTooltipState(true);\r\n          return Promise.reject(`Ошибка: ${res.message}`);\r\n        } else {\r\n          localStorage.setItem('jwt', res.token);\r\n          setCurrentUser(res);\r\n          api.setToken(res.token);\r\n          setLoggedIn(true);\r\n          setUserdata({\r\n            email: email,\r\n          });\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  // Функция выхода из системы\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt');\r\n    api.setToken('');\r\n    setUserdata({\r\n      email: '',\r\n    });\r\n    setLoggedIn(false);\r\n    setCurrentUser({});\r\n  };\r\n\r\n  // Изменение стейта регистрации\r\n\r\n  const handleButtonState = (buttonState) => {\r\n    setButtonState(buttonState);\r\n  };\r\n\r\n  // Функции переадресации для кнопок Вход и Регистрация и на Главную\r\n\r\n  const pushToLogin = () => {\r\n    history.push('/signin');\r\n  };\r\n\r\n  const pushToRegister = () => {\r\n    history.push('/signup');\r\n  };\r\n\r\n  const returnToMainPage = () => {\r\n    history.push('/');\r\n  };\r\n  React.useEffect(() => {\r\n    tokenCheck();\r\n    const token = localStorage.getItem('jwt');\r\n    if (!token) {\r\n      return;\r\n    }\r\n    setLoggedIn(true);\r\n    api.setToken(token);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      const promises = [api.getUser(), api.getInitialCards()];\r\n      Promise.all(promises)\r\n        .then(([user, cards]) => {\r\n          setCurrentUser(user);\r\n          setCards(cards);\r\n        })\r\n        .catch((res) => {\r\n          api.handleResponseError(res);\r\n        });\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <>\r\n        <div className=\"page__container\">\r\n          <Header\r\n            loggedIn={loggedIn}\r\n            buttonState={buttonState}\r\n            userEmail={userData.email}\r\n            handleLogout={handleLogout}\r\n            pushToLogin={pushToLogin}\r\n            pushToRegister={pushToRegister}\r\n          />\r\n          <Switch>\r\n            <ProtectedRoute\r\n              loggedIn={loggedIn}\r\n              exact\r\n              path=\"/\"\r\n              component={Main}\r\n              cards={cards}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onMouseOnAvatar={handleEditAvatarOn}\r\n              onMouseOffAvatar={handleEditAvatarOff}\r\n              isAvatarButtonActive={isAvatarEditButtonActive}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n            />\r\n            <Route path=\"/signin\">\r\n              <Login\r\n                handleLogin={handleLogin}\r\n                handleButtonState={handleButtonState}\r\n              />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <Register\r\n                handleRegister={handleRegister}\r\n                handleButtonState={handleButtonState}\r\n              />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <PageNotFound onClick={returnToMainPage} />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n        {/* Попап редактирования профиля */}\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        {/* Попап добавления карточки */}\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        {/* Попап редактирования аватара */}\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        {/* Попап полноразмерного фото карточки */}\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n        {/* Попап инфо о регистрации */}\r\n        <InfoToolTip\r\n          onClose={closeAllPopups}\r\n          isOpen={isInfoTooltipOpen}\r\n          message={isRegistered.message}\r\n          state={isRegistered.state}\r\n        />\r\n      </>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Main.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\ImagePopup.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\AddPlacePopup.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\EditProfilePopup.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\InfoTooltip.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Register.js",["97"],"import React, { useState } from 'react';\r\nimport './styles/Form.css';\r\nimport Form from './Form';\r\n\r\nconst Register = ({ handleRegister, handleButtonState }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    handleButtonState('login');\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = data;\r\n    handleRegister(email, password);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      title=\"Регистрация\"\r\n      buttonText=\"Зарегистрироваться\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={data.value}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\PageNotFound.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Login.js",["98"],"import React, { useState } from 'react';\r\nimport './styles/Form.css';\r\nimport Form from './Form';\r\n\r\nconst Login = ({ handleLogin, handleButtonState }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    handleButtonState('register');\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = data;\r\n    handleLogin(email, password);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form title=\"Вход\" buttonText=\"Войти\" onSubmit={handleSubmit}>\r\n      <>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={data.value}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\mestoAuth.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\utils\\api.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Button.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Card.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\PopupWithForm.js",[],"C:\\Users\\Andrey Varlamov\\dev\\mesto-full\\frontend\\src\\components\\Form.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":312,"column":6,"nodeType":"105","endLine":312,"endColumn":8,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":13,"column":6,"nodeType":"105","endLine":13,"endColumn":8,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"107","line":13,"column":6,"nodeType":"105","endLine":13,"endColumn":8,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook React.useEffect has a missing dependency: 'handleButtonState'. Either include it or remove the dependency array. If 'handleButtonState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["113"],["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},"Update the dependencies array to be: [tokenCheck]",{"range":"120","text":"121"},"Update the dependencies array to be: [handleButtonState]",{"range":"122","text":"123"},{"range":"124","text":"123"},[9209,9211],"[tokenCheck]",[311,313],"[handleButtonState]",[308,310]]