{"version":3,"sources":["components/Button.js","images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","images/Vector.svg","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","images/Union_ok.svg","images/Union_fail.svg","components/InfoTooltip.js","utils/api.js","components/ProtectedRoute.js","components/Form.js","components/Login.js","components/Register.js","components/PageNotFound.js","mestoAuth.js","components/App.js","serviceWorker.js","index.js"],"names":["Button","onClick","buttonText","type","aria-label","className","Header","button","loggedIn","buttonState","userEmail","handleLogout","pushToLogin","pushToRegister","src","logo","alt","CurrentUserContext","React","createContext","Card","onCardClick","cardElement","onCardLike","onCardDelete","currentUser","useContext","cardDeleteButtonClassName","_id","owner","isLiked","likes","some","like","cardLikeButtonClassName","link","name","length","Main","memo","cards","onEditProfile","onAddPlace","onEditAvatar","onMouseOnAvatar","onMouseOffAvatar","isAvatarButtonActive","style","backgroundImage","avatar","onMouseEnter","onMouseLeave","avatarEdit","about","map","card","Footer","ImagePopup","onClose","PopupWithForm","isOpen","title","children","onSubmit","action","method","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","placeholder","id","value","required","minLength","maxLength","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","defaultValue","AddPlacePopup","setLink","InfoToolTip","message","state","imageSuccess","imageFail","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","statusText","err","console","log","fetch","then","_handleResponse","userData","body","JSON","stringify","newAvatar","cardId","authorization","ProtectedRoute","Component","component","props","to","Form","Login","handleLogin","handleButtonState","email","password","data","setData","handleChange","Register","handleRegister","PageNotFound","BASE_URL","handleResponse","response","App","setCards","isEditProfilePopupOpen","setPopupProfileState","isAddPlacePopupOpen","setPopupPlaceState","isEditAvatarPopupOpen","setPopupAvatarState","isInfoTooltipOpen","setInfoTooltipState","isAvatarEditButtonActive","setAvatarEditButton","selectedCard","setSelectedCard","setCurrentUser","setLoggedIn","setUserdata","setButtonState","isRegistered","setRegisterState","history","useHistory","closeAllPopups","tokenCheck","token","jwt","localStorage","getItem","Authorization","push","catch","promises","getUser","getInitialCards","all","user","handleResponseError","Provider","removeItem","exact","path","changeLikeStatus","newCard","newCards","c","deleteCard","filter","mestoAuth","error","setItem","updateUser","cardData","uploadCard","updateUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24eb316e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Button.css';\r\n\r\nfunction Button({ onClick, buttonText }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      aria-label=\"Войти\"\r\n      className=\"button\"\r\n      onClick={onClick}\r\n    >\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport { Button };\r\n","export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import React from 'react';\r\nimport { Button } from './Button';\r\nimport logo from '../images/logo.svg';\r\nfunction Header({\r\n  loggedIn,\r\n  buttonState,\r\n  userEmail,\r\n  handleLogout,\r\n  pushToLogin,\r\n  pushToRegister,\r\n}) {\r\n  let button;\r\n\r\n  if (buttonState === 'register') {\r\n    button = (\r\n      <Button onClick={pushToRegister} buttonText={'Зарегистрироваться'} />\r\n    );\r\n  } else {\r\n    button = <Button onClick={pushToLogin} buttonText={'Войти'} />;\r\n  }\r\n\r\n  return (\r\n    <header className=\"header section section_standard\">\r\n      <img src={logo} alt=\"Логотип Место\" className=\"logo\" />\r\n      {loggedIn ? (\r\n        <div className=\"header__container\">\r\n          <p className=\"header__user-email\">{userEmail}</p>{' '}\r\n          <Button onClick={handleLogout} buttonText={'Выйти'} />{' '}\r\n        </div>\r\n      ) : (\r\n        button\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","export default __webpack_public_path__ + \"static/media/Vector.ae1a976d.svg\";","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ onCardClick, cardElement, onCardLike, onCardDelete }) {\r\n  const handleCLick = () => {\r\n    onCardClick(cardElement);\r\n  };\r\n\r\n  const handleLikeClick = () => {\r\n    onCardLike(cardElement);\r\n  }\r\n\r\n  const handleDeleteClick = () => {\r\n    onCardDelete(cardElement);\r\n  }\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const cardDeleteButtonClassName = (`photo-elements__delete-btn ${currentUser._id !== cardElement.owner._id ? 'photo-elements__delete-btn_inactive' : ''}`);\r\n  const isLiked = cardElement.likes.some(like => like._id === currentUser._id);\r\n  const cardLikeButtonClassName = (`photo-elements__like ${isLiked ? 'photo-elements__like_active' : ''}`)\r\n\r\n  return (\r\n    (<li className=\"photo-elements__list-item\">\r\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n      <img className=\"photo-elements__image\" src={cardElement.link} alt={cardElement.name} onClick={handleCLick} />\r\n      <h2 className=\"photo-elements__name\">{cardElement.name}</h2>\r\n      <div className=\"photo-elements__like-wrapper\">\r\n        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n        <span className=\"photo-elements__like-span\">{cardElement.likes.length}</span>\r\n      </div>\r\n    </li>)\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport avatarEdit from '../images/Vector.svg';\r\nimport Card from './Card';\r\n\r\nconst Main = React.memo(\r\n  ({\r\n    cards,\r\n    onEditProfile,\r\n    onAddPlace,\r\n    onEditAvatar,\r\n    onMouseOnAvatar,\r\n    onMouseOffAvatar,\r\n    isAvatarButtonActive,\r\n    onCardClick,\r\n    onCardLike,\r\n    onCardDelete,\r\n  }) => {\r\n    // Стейт пользователя\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    return (\r\n      <main className=\"content\">\r\n        <section className=\"profile section section_standard\">\r\n          <div className=\"profile__overlay\">\r\n            <div\r\n              className=\"profile__avatar\"\r\n              style={{ backgroundImage: `url(${currentUser.avatar})` }}\r\n              onMouseEnter={onMouseOnAvatar}\r\n              onMouseLeave={onMouseOffAvatar}\r\n              onClick={onEditAvatar}\r\n            >\r\n              <img\r\n                src={avatarEdit}\r\n                alt=\"Изменить аватар\"\r\n                className={`profile__avatar-edit-btn ${\r\n                  isAvatarButtonActive && 'profile__avatar-edit-btn_active'\r\n                }`}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button\r\n              type=\"button\"\r\n              aria-label=\"Редактировать\"\r\n              className=\"profile__edit-btn\"\r\n              onClick={onEditProfile}\r\n            ></button>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"Добавить\"\r\n            className=\"profile__add-btn\"\r\n            onClick={onAddPlace}\r\n          ></button>\r\n        </section>\r\n\r\n        <section\r\n          className=\"photo-elements section section_standard\"\r\n          aria-label=\"Места\"\r\n        >\r\n          <ul className=\"photo-elements__list\">\r\n            {cards.map((card) => (\r\n              <Card\r\n                key={card._id}\r\n                cardElement={card}\r\n                onCardClick={onCardClick}\r\n                onCardLike={onCardLike}\r\n                onCardDelete={onCardDelete}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer () {\r\n  return (\r\n    <footer className=\"footer section section_standard\">\r\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n      </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  return (\r\n    <section className={`popup popup_photo ${card.link ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__photo-container\">\r\n        <button type=\"reset\" aria-label=\"Закрыть\" className=\"popup__close-btn\" onClick={onClose}></button>\r\n        <img src={card.link} alt={card.name} className=\"popup__image\" />\r\n        <h3 className=\"popup__photo-name\">\r\n          {card.name}\r\n        </h3>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\n\r\nconst PopupWithForm = React.memo(({ isOpen, onClose, title, name, buttonText, children, onSubmit }) => {\r\n \r\n  return (\r\n    <section className={`popup popup_${name} ${isOpen ? 'popup_opened' : ''}`}>\r\n      <form action=\"#\" method=\"POST\" className=\"popup__container\" noValidate onSubmit={onSubmit}>\r\n        <button type=\"reset\" aria-label=\"Закрыть\" className=\"popup__close-btn\" onClick={onClose}></button>\r\n        <h2 className=\"popup__name\">\r\n          {title}\r\n        </h2>\r\n\r\n        <fieldset className=\"popup__input-form\">\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__save-btn\">\r\n            {buttonText}\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    </section>\r\n  );\r\n});\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n//Попап редактирования профиля\r\nconst EditProfilePopup = React.memo(({ isOpen, onClose, onUpdateUser }) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  \r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  const handleChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser, isOpen]);\r\n\r\n  return <PopupWithForm\r\n    isOpen={isOpen}\r\n    onClose={onClose}\r\n    title=\"Редактировать профиль\"\r\n    name=\"profile\"\r\n    buttonText=\"Сохранить\"\r\n    onSubmit={handleSubmit}>\r\n    <>\r\n      <input type=\"text\" placeholder=\"Имя\" name=\"input-name\" id=\"input-name\" value={name ? name : ''}\r\n        className=\"popup__text popup__text_el_name\" required minLength=\"2\" maxLength=\"40\" onChange={handleChangeName} />\r\n      <span className=\"popup__error\" id=\"input-name-error\"></span>\r\n\r\n      <input type=\"text\" placeholder=\"Профессия\" name=\"input-job\" id=\"input-job\" value={description ? description : ''}\r\n        className=\"popup__text popup__text_el_job\" required minLength=\"2\" maxLength=\"200\" onChange={handleChangeDescription} />\r\n      <span className=\"popup__error\" id=\"input-job-error\"></span>\r\n    </>\r\n  </PopupWithForm>\r\n});\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm'\r\n\r\n\r\nconst EditAvatarPopup = React.memo(({ isOpen, onClose, onUpdateAvatar }) => {\r\n  const avatarRef = React.useRef();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onUpdateAvatar(avatarRef.current.value);\r\n  }\r\n  // Сброс полей ввода\r\n  React.useEffect(() => {\r\n    avatarRef.current.value = '';\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title=\"Обновить аватар\"\r\n      name=\"avatar\"\r\n      buttonText=\"Сохранить\"\r\n      onSubmit={handleSubmit}>\r\n      <>\r\n        <input type=\"url\" ref={avatarRef} placeholder=\"Ссылка на аватар\" name=\"input-avatarLink\" id=\"input-avatarLink\" defaultValue=\"\"\r\n          className=\"popup__text popup__text_el_image-link\" required />\r\n        <span className=\"popup__error\" id=\"input-avatarLink-error\"></span>\r\n      </>\r\n    </PopupWithForm>\r\n  )\r\n});\r\n\r\nexport default EditAvatarPopup;\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm'\r\n\r\nconst AddPlacePopup = ({ isOpen, onClose, onAddPlace }) => {\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  const handleChangeLink = (e) => {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddPlace({ name, link });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setLink('');\r\n    setName('');\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title=\"Новое место\"\r\n      name=\"cards\"\r\n      buttonText=\"Создать\"\r\n      onSubmit={handleSubmit}>\r\n      <>\r\n        <input type=\"text\" placeholder=\"Название\" name=\"input-place\" id=\"input-place\" value={name}\r\n          className=\"popup__text popup__text_el_place\" required minLength=\"1\" maxLength=\"40\" onChange={handleChangeName} />\r\n        <span className=\"popup__error\" id=\"input-place-error\"></span>\r\n\r\n        <input type=\"url\" placeholder=\"Ссылка на картинку\" name=\"input-link\" id=\"input-link\" value={link}\r\n          className=\"popup__text popup__text_el_image-link\" required onChange={handleChangeLink} />\r\n        <span className=\"popup__error\" id=\"input-link-error\"></span>\r\n      </>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","export default __webpack_public_path__ + \"static/media/Union_ok.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/Union_fail.df8eddf6.svg\";","import React from 'react';\r\nimport imageSuccess from '../images/Union_ok.svg';\r\nimport imageFail from '../images/Union_fail.svg';\r\n\r\nconst InfoToolTip = ({ onClose, message, isOpen, state }) => {\r\n  return (\r\n    <section className={`popup popup_info ${isOpen ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"reset\"\r\n          aria-label=\"Закрыть\"\r\n          className=\"popup__close-btn\"\r\n          onClick={onClose}\r\n        ></button>\r\n        <img src={state ? imageSuccess : imageFail} alt={message} className=\"popup__info-image\" />\r\n        <h3 className=\"popup__message\">{state ? message : `${message} \\n Попробуйте еще раз.`}</h3>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { InfoToolTip };\r\n","class Api {\r\n  constructor({ url, headers }) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n  }\r\n  // Метод обработки ответа\r\n  _handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.statusText);\r\n  };\r\n\r\n  // Метод обработки ошибки запроса\r\n  handleResponseError(err) {\r\n    console.log(`Error,${err}`);\r\n    return Promise.reject(err['message']);\r\n  };\r\n\r\n  // Получение инфо о пользователе\r\n  getUser() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  // Обновление данных пользователя\r\n  updateUser(userData) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: userData['name'],\r\n        about: userData['about']\r\n      })\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  // Обновление аватара\r\n  updateUserAvatar(newAvatar) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: newAvatar,\r\n      })\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  // Загрузка массива карточек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  // Добавление карточки\r\n  uploadCard({ name, link }) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n  // Удаление карточки \r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n  // Методы лайков\r\n\r\n  changeLikeStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers\r\n      })\r\n        .then(this._handleResponse)\r\n    }\r\n    else {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this._headers\r\n      })\r\n        .then(this._handleResponse)\r\n    }\r\n  };\r\n}\r\n\r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\r\n  headers: {\r\n    authorization: '37456d63-78f1-44ef-bbbe-976c826581c0',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport './styles/Form.css';\r\n\r\nconst Form = ({ title, buttonText, onSubmit, children }) => {\r\n  return (\r\n    <form\r\n      action=\"#\"\r\n      method=\"POST\"\r\n      onSubmit={onSubmit}\r\n      className=\"form__container\"\r\n    >\r\n      <h2 className=\"form__header\">{title}</h2>\r\n      <fieldset className=\"form__fieldset\">\r\n        {children}\r\n        <button type=\"submit\" className=\"form__button\">\r\n          {buttonText}\r\n        </button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport './styles/Form.css';\r\nimport Form from './Form';\r\n\r\nconst Login = ({ handleLogin, handleButtonState }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    handleButtonState('register');\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = data;\r\n    handleLogin(email, password);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form title=\"Вход\" buttonText=\"Войти\" onSubmit={handleSubmit}>\r\n      <>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={data.value}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport './styles/Form.css';\r\nimport Form from './Form';\r\n\r\nconst Register = ({ handleRegister, handleButtonState }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    handleButtonState('login');\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = data;\r\n    handleRegister(email, password);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      title=\"Регистрация\"\r\n      buttonText=\"Зарегистрироваться\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={data.value}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Button } from './Button';\r\nimport './styles/PageNotFound.css';\r\n\r\nconst PageNotFound = ({ onClick }) => {\r\n  return (\r\n    <div className=\"pageNotFound\">\r\n      <h2 className=\"pageNotFound__text\">\r\n        Упс! Извините, такой страницы нет :(\r\n      </h2>\r\n      <Button onClick={onClick} buttonText={'На главную'} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nconst handleResponse = (response) => response.json();\r\n// response.ok ? response.json() : Promise.reject(`Ошибка: ${response.json().error}`);\r\n\r\nconst register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nconst getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport { BASE_URL, register, authorize, getContent };\r\n","import React, { useState } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { InfoToolTip } from './InfoTooltip';\r\nimport api from '../utils/api';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport PageNotFound from './PageNotFound';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport * as mestoAuth from '../mestoAuth';\r\n\r\nfunction App() {\r\n  // Переменные состояния\r\n  // Массив карточек\r\n  const [cards, setCards] = useState([]);\r\n  //открыт попап профиля или нет\r\n  const [isEditProfilePopupOpen, setPopupProfileState] = useState(false);\r\n  //открыт попап добавления карточки или нет\r\n  const [isAddPlacePopupOpen, setPopupPlaceState] = useState(false);\r\n  // открыт попап редактирования аватара или нет\r\n  const [isEditAvatarPopupOpen, setPopupAvatarState] = useState(false);\r\n  // Открыт ли попап инфо о регистрации\r\n  const [isInfoTooltipOpen, setInfoTooltipState] = useState(false);\r\n  // Активна ли кнопка редактирования аватара\r\n  const [isAvatarEditButtonActive, setAvatarEditButton] = useState(false);\r\n  // выбор карточки\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  // Пользователь\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  // Залогинен ли пользователь\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // Данные текущего пользователя\r\n  const [userData, setUserdata] = useState({\r\n    email: '',\r\n  });\r\n  // Данные где находится пользователь\r\n  const [buttonState, setButtonState] = useState('');\r\n  // Данные для попапа о регистрации\r\n  const [isRegistered, setRegisterState] = useState({\r\n    state: false,\r\n    message: '',\r\n  });\r\n  const history = useHistory();\r\n\r\n  // Функция добавления карточки\r\n  const handleAddPlaceSubmit = (cardData) => {\r\n    api\r\n      .uploadCard(cardData)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n\r\n  // Функция поддержки лайков\r\n  const handleCardLike = (card) => {\r\n    const isLiked = card.likes.some((like) => like._id === currentUser._id);\r\n    api\r\n      .changeLikeStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n        setCards(newCards);\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n  // Функция удаления карточки\r\n  const handleCardDelete = (card) => {\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n\r\n  // Обработчики открытия попапов\r\n  const handleEditAvatarClick = () => {\r\n    setPopupAvatarState(true);\r\n  };\r\n  const handleEditProfileClick = () => {\r\n    setPopupProfileState(true);\r\n  };\r\n  const handleAddPlaceClick = () => {\r\n    setPopupPlaceState(true);\r\n  };\r\n  // Функция закрытия попапов\r\n  const closeAllPopups = () => {\r\n    setPopupAvatarState(false);\r\n    setPopupProfileState(false);\r\n    setPopupPlaceState(false);\r\n    setInfoTooltipState(false);\r\n    setRegisterState({\r\n      state: false,\r\n      message: '',\r\n    });\r\n    setSelectedCard({});\r\n  };\r\n  const handleCardClick = (cardElement) => {\r\n    setSelectedCard(cardElement);\r\n  };\r\n  // Обработчик кнопки редактирования аватара\r\n  const handleEditAvatarOn = () => {\r\n    setAvatarEditButton(true);\r\n  };\r\n  const handleEditAvatarOff = () => {\r\n    setAvatarEditButton(false);\r\n  };\r\n  // Функция обновления инфо о юзере при сабмите\r\n  const handleUpdateUser = (userData) => {\r\n    api\r\n      .updateUser(userData)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n  // Функция обновления аватара при сабмите\r\n  const handleUpdateAvatar = (newAvatar) => {\r\n    api\r\n      .updateUserAvatar(newAvatar)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  };\r\n  // Функция проверки наличия и валидности токена\r\n  const tokenCheck = () => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      mestoAuth\r\n        .getContent(jwt)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.message) {\r\n            setLoggedIn(false);\r\n            setUserdata({\r\n              email: '',\r\n            });\r\n            return Promise.reject(`Ошибка: ${res.message}`);\r\n          }\r\n          if (res.data.email) {\r\n            setLoggedIn(true);\r\n            setUserdata({\r\n              email: res.data.email,\r\n            });\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((res) => {\r\n          console.log(res);\r\n          setRegisterState({\r\n            state: false,\r\n            message: 'Что-то пошло не так...',\r\n          });\r\n          setInfoTooltipState(true);\r\n        });\r\n    }\r\n  };\r\n  // Функция регистрации\r\n  const handleRegister = (email, password) => {\r\n    mestoAuth\r\n      .register(email, password)\r\n      .then((res) => {\r\n        if (res.error || res.message) {\r\n          setRegisterState({\r\n            state: false,\r\n            message: `${res.error ? res.error : res.message}`,\r\n          });\r\n          setInfoTooltipState(true);\r\n          return Promise.reject(\r\n            `Ошибка: ${res.error ? res.error : res.message}`\r\n          );\r\n        } else {\r\n          setRegisterState({\r\n            state: true,\r\n            message: 'Вы успешно зарегистрировались',\r\n          });\r\n          setInfoTooltipState(true);\r\n          history.push('/sign-in');\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n        setRegisterState({\r\n          state: false,\r\n          message: 'Что-то пошло не так...',\r\n        });\r\n        setInfoTooltipState(true);\r\n      });\r\n  };\r\n\r\n  // Функция авторизации\r\n  const handleLogin = (email, password) => {\r\n    mestoAuth\r\n      .authorize(email, password)\r\n      .then((res) => {\r\n        if (res.message) {\r\n          setRegisterState({\r\n            state: false,\r\n            message: `${res.error ? res.error : res.message}`,\r\n          });\r\n          setInfoTooltipState(true);\r\n          return Promise.reject(`Ошибка: ${res.message}`);\r\n        } else {\r\n          localStorage.setItem('jwt', res.token);\r\n          setLoggedIn(true);\r\n          setUserdata({\r\n            email: email,\r\n          });\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n        setRegisterState({\r\n          state: false,\r\n          message: 'Что-то пошло не так...',\r\n        });\r\n        setInfoTooltipState(true);\r\n      });\r\n  };\r\n\r\n  // Функция выхода из системы\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt');\r\n    setUserdata({\r\n      email: '',\r\n    });\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  // Изменение стейта регистрации\r\n\r\n  const handleButtonState = (buttonState) => {\r\n    setButtonState(buttonState);\r\n  };\r\n\r\n  // Функции переадресации для кнопок Вход и Регистрация и на Главную\r\n\r\n  const pushToLogin = () => {\r\n    history.push('/sign-in');\r\n  };\r\n\r\n  const pushToRegister = () => {\r\n    history.push('/sign-up');\r\n  };\r\n\r\n  const returnToMainPage = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  // Загрузка данных о пользователе и карточек страницы\r\n  React.useEffect(() => {\r\n    const promises = [api.getUser(), api.getInitialCards()];\r\n    Promise.all(promises)\r\n      .then(([user, cards]) => {\r\n        setCurrentUser(user);\r\n        setCards(cards);\r\n      })\r\n      .catch((res) => {\r\n        api.handleResponseError(res);\r\n      });\r\n  }, []);\r\n  React.useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <>\r\n        <div className=\"page__container\">\r\n          <Header\r\n            loggedIn={loggedIn}\r\n            buttonState={buttonState}\r\n            userEmail={userData.email}\r\n            handleLogout={handleLogout}\r\n            pushToLogin={pushToLogin}\r\n            pushToRegister={pushToRegister}\r\n          />\r\n          <Switch>\r\n            <ProtectedRoute\r\n              loggedIn={loggedIn}\r\n              exact\r\n              path=\"/\"\r\n              component={Main}\r\n              cards={cards}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onMouseOnAvatar={handleEditAvatarOn}\r\n              onMouseOffAvatar={handleEditAvatarOff}\r\n              isAvatarButtonActive={isAvatarEditButtonActive}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n            />\r\n            <Route path=\"/sign-in\">\r\n              <Login\r\n                handleLogin={handleLogin}\r\n                handleButtonState={handleButtonState}\r\n              />\r\n            </Route>\r\n            <Route path=\"/sign-up\">\r\n              <Register\r\n                handleRegister={handleRegister}\r\n                handleButtonState={handleButtonState}\r\n              />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <PageNotFound onClick={returnToMainPage} />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n        {/* Попап редактирования профиля */}\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        {/* Попап добавления карточки */}\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        {/* Попап редактирования аватара */}\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        {/* Попап полноразмерного фото карточки */}\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n        {/* Попап инфо о регистрации */}\r\n        <InfoToolTip\r\n          onClose={closeAllPopups}\r\n          isOpen={isInfoTooltipOpen}\r\n          message={isRegistered.message}\r\n          state={isRegistered.state}\r\n        />\r\n      </>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}